
public class Recursion {
	
	
	/**
	 * public method that uses recursion to calculate the sum of the digits of the given integer
	 * @param n non-negative integer 
	 * @return the sum of all digits of the input integer
	 */
	public int sumDigit(int n){
		if(n / 10 == 0)
			return n;
		else
			return (n%10) + sumDigit(n/10);
	}
	
	/**
	 * public method that takes two integer input and calculate the gcd using Euclidean Algorithm
	 * @param a positive integer
	 * @param b positive integer
	 * @return gcd of a and b
	 */
	public int gcd(int a, int b){
		if(a % b == 0)
			return b;
		else
			return gcd(b, a % b);
	}
	
	/**
	 * public method that uses recursion to check if the input string is a palindrome
	 * @param str input non-empty string
	 * @return true if the input string is a palindrome, false otherwise
	 */
	public boolean isPalindrome(String str){
		if(str.length() == 0 || str.length() == 1)
			return true;
		else if(str.charAt(0) == str.charAt(str.length() - 1))
			return isPalindrome(str.substring(1,str.length()));
		else
			return false;
	}
	
	public static void main(String args[]){
		Recursion a = new Recursion();
		System.out.println(a.sumDigit(321));
		System.out.println(a.sumDigit(563403245));
		System.out.println(a.gcd(36, 24));
		System.out.println(a.isPalindrome("aba"));
	}
}
